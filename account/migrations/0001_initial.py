# Generated by Django 3.1.7 on 2023-04-26 07:22

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(upload_to='logos')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=25)),
                ('manzil', models.CharField(max_length=255)),
                ('creator', models.CharField(blank=True, max_length=255, null=True)),
                ('about', models.TextField(null=True)),
                ('tg_token', models.TextField(null=True)),
                ('balance', models.BigIntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('B2C', 'Biznesdan mijozga (B2C)'), ('B2B', 'Biznesdan biznesga (B2B)')], default='B2C', max_length=3)),
                ('sms_email', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_password', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_token', models.TextField(null=True)),
                ('sms_balans', models.IntegerField(default=0)),
                ('sms_from', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_callback_url', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_activated', models.BooleanField(default=False)),
                ('smsto_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('smsto_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('smsto_expires_in', models.IntegerField(default=600000)),
                ('smsto_token', models.TextField(null=True)),
                ('smsto_sender_id', models.CharField(blank=True, max_length=11, null=True)),
                ('smsto_activated', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('max_worker_count', models.IntegerField(default=0)),
                ('info', models.TextField(default='')),
                ('price', models.BigIntegerField(default=0)),
                ('is_trial', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('summa', models.BigIntegerField(default=0)),
                ('active', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.company')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.plan')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='plan',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.plan'),
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('number', models.CharField(max_length=30)),
                ('expire', models.CharField(max_length=10)),
                ('active', models.BooleanField(default=False)),
                ('token', models.TextField(blank=True, null=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.company')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_director', models.BooleanField(default=False)),
                ('token', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=25, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.company')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
